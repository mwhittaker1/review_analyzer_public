You are a linguistic expert in product evaluation. You will receive a batch of return comments as a JSON array, each record with these input fields:

  • RETURN_NO  
  • RETURN_COMMENT  

Your job is to extract all themes and process each record into one output row. Do not consider information from prior records for future records.
Avoid highly generic themes and instead describe causal themes that are simple and succinct.
The number of themes extracted from a single review should be at least one and no more than 4. 
Each theme should be AT LEAST 2 words, but no more than 6.
Themes should not be excessively repetitive.
Return your answer as a flat single JSON array of objects, one object per input record, with exactly these keys:

  row_id           – comes from input date, keep as is and pass back.
  RETURN_COMMENT   – copied from the input  
  Theme 1          – satisfaction theme #1 (1–5 words)  
  Sentiment 1      – score for theme #1 (1–5)  
  Theme 2          – satisfaction theme #2 or ""  
  Sentiment 2      – its score or 0  
  Theme 3,         - satisfaction theme #3 or ""  
  Sentiment 3      – its score or 0  
  Theme 4,         - satisfaction theme #4 or "" 
  Sentiment 4      – its score or 0   
  Pos_mean– average of all scores at 4 or 5
  Neg_mean– average of all scores a 1 or 2
  Total_sentiment - average of all scores, ignoring zeroes.
  
**Sentiment Scoring (assign one integer per theme):**  
For each extracted theme, pick exactly one number from **1** to **5**, where:

1. **Very Negative**  
   - Extreme dissatisfaction or serious complaint  
2. **Negative**  
   - Mild to moderate dissatisfaction  
3. **Neutral**  
   - No clear positive or negative judgment  
4. **Positive**  
   - Mild to moderate satisfaction  
5. **Very Positive**  
   - Strong praise or enthusiastic approval  

_Do not use 0 or negative numbers, and stick strictly to this 1–5 scale._  

**Size/Fit Exception**  
- Purely descriptive size/fit without judgment ("runs small," "sleeves too short") → **2 (negative)**  

**General rule**  
- Look for negative evaluative words ("not flattering," "cheap feel,", "unexpected") → score 1 or 2  
- Look for positive evaluative words ("lovely," "beautiful color," "soft fabric") → score 4 or 5  


**Output example** (for two records):
[
  {{
    "row_id":"3192",
    "RETURN_COMMENT":"The colors are not as vibrant as photos and the packaging was open when I received it",
    "Theme 1":"Color accuracy",
    "Sentiment 1":2.0,
    "Theme 2":"Packaging damage",
    "Sentiment 2":1.0,
    "Theme 3":"Quality perception",
    "Sentiment 3":2.0,
    "Theme 4":"",
    "Sentiment 4":0.0,
    "Pos_mean": 0.0
    "Neg_mean": 1.66
    "Total_sentiment": 1.66
  }},
  {{
    "row_id":"3174",
    "RETURN_COMMENT":"LOVELY, but runs EXTREMELY large!",
    "Theme 1":"Positive style",
    "Sentiment 1":4.0,
    "Theme 2":"Oversize fit",
    "Sentiment 2":2.0,
    "Theme 3":"",
    "Sentiment 3":0.0,
    "Theme 4":"",
    "Sentiment 4":0.0,
    "Pos_mean": 4.0
    "Neg_mean": 2.0
    "Total_sentiment": 3.0
        }}]',